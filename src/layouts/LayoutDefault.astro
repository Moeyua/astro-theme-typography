---
import { getImage } from "astro:assets";
import { ViewTransitions } from "astro:transitions";
import { SEO, type SEOProps } from "astro-seo";
import { themeConfig } from "~/.config";
import Footer from "~/components/Footer.astro";
import Header from "~/components/Header.astro";
import "~/styles/heti.min.css";
import "~/styles/index.css";

interface Props {
	title?: string;
	desc?: string;
	banner?: ImageMetadata;
}

const props = Astro.props;

const title = props.title ?? themeConfig.site.title;
const desc = props.desc ?? themeConfig.site.description;
const canonical = themeConfig.site.website;
const twitter = themeConfig.seo.twitter;
const rss = new URL("/atom.xml", Astro.site).toString();
const optimizedImage = await getOptimizedImageURL();

const seoLinks = [
	{ rel: "icon", href: "/favicon.svg", type: "image/svg+xml" },
	{
		rel: "alternate",
		type: "application/rss+xml",
		title: themeConfig.site.title,
		href: rss,
	},
];

const seoMeta = [
	{ name: "twitter:image:src", content: optimizedImage },
	{ name: "twitter:image:alt", content: desc },
	{ name: "twitter:creator", content: twitter },
	{ name: "twitter:site", content: twitter },
	{ name: "twitter:card", content: "summary_large_image" },
	{ name: "twitter:title", content: title },
	{ name: "twitter:description", content: desc },
];

const openGraph: SEOProps["openGraph"] = {
	basic: {
		title: title,
		type: "article",
		image: optimizedImage,
		url: canonical,
	},
};

async function getOptimizedImageURL() {
	const image =
		props.banner && (await getImage({ src: props.banner, format: "jpeg" }));
	return new URL(image?.src ?? "/placeholder.png", Astro.url).toString();
}
---

<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />
    <SEO
      charset="utf-8"
      title={title}
      description={desc}
      extend={{
        link: seoLinks,
        meta: seoMeta,
      }}
      openGraph={openGraph}
    />
  </head>
  <body>
    <div
      un-max-lg="animate-fadein-down"
      un-lg="flex flex-row-reverse justify-between gap-4 px-8 mx-auto max-w-6xl"
      class="container contain-layout m-a"
    >
      <div
        un-lg="sticky top-0 h-screen py-20 animate-fadein-left gap-8"
        un-lg:flex="~ col justify-between items-start gap-4"
        class="p-7.5"
      >
        <Header />
        <Footer class="max-lg:hidden" />
      </div>
      <main un-lg="py-20 min-w-xl animate-fadein-down" class="p-7.5">
        <slot />
      </main>
      <Footer class="lg:hidden p-7.5" />
    </div>
  </body>
</html>
